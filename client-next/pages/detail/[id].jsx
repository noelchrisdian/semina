import Cookies from "js-cookie";
import moment from "moment/moment";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { Button } from "@/src/components/Button";
import { CardEvent } from "@/src/components/Card Event";
import { Footer } from "@/src/components/Footer";
import { getData } from "@/src/utils/fetch";
import { handlerFormatCurrency } from "@/src/utils/currency";
import { handlerFormatDate } from "@/src/utils/date format";
import { Navbar } from "@/src/components/Navbar";
import { Statistics } from "@/src/components/Statistics";
import { Stories } from "@/src/components/Stories";

export default function Detail({ detail, id }) {
    const [data, setData] = useState([]);
    const router = useRouter();

    useEffect(() => {
        const getEvent = async () => {
            const response = await getData(`${process.env.NEXT_PUBLIC_API_URL}/participants/events`)

            setData(response.data);
        }

        getEvent();
    }, [])

    const handleSubmit = (ticketID, organizer) => {
        const token = Cookies.get('token');
        if (!token) {
            return router.push('/signin');
        }

        router.push(`/checkout/${id}?ticketID=${ticketID}&organizer=${organizer}`);
    }

    return (
			<>
				<Head>
					<title>Semina | Details</title>
					<meta
						name="description"
						content="Generated by create next app"
					/>
					<link rel="icon" type="image/svg+xml" href="/images/Logo.svg" />
				</Head>

				<section className="bg-navy">
					<Navbar />
				</section>

				<div className="preview-image bg-navy text-center">
					<Image
						src={`${process.env.NEXT_PUBLIC_API_URL}/${detail?.image?.name}`}
						className="img-content"
						alt="semina"
						width={400}
						height={560}
					/>
				</div>

				<div className="details-content container">
					<div className="d-flex flex-wrap justify-content-lg-center gap">
						<div className="d-flex flex-column description">
							<div className="headline mt-4">{detail.title}</div>
							<br />
							<div className="event-details">
								<h6>Event Details</h6>
								<p className="details-paragraph">{detail.about}</p>
							</div>
							<div className="keypoints">
								{detail?.keyPoint?.map((key, i) => {
									return (
										<div
											className="d-flex align-items-start gap-3"
											key={i}>
											<Image
												src={"/images/Check.svg"}
												alt="semina"
												width={25}
												height={25}
											/>
											<span>{key}</span>
										</div>
									);
								})}
							</div>

							<div className="map-location">
								<h6>Event Location</h6>
								<div className="map-placeholder">
									<div className="maps">
										<Image
											src={"/images/Maps.png"}
											alt=""
											width={100}
											height={100}
										/>
										<div
											className="absolute d-flex justify-content-center align-items-center"
											id="hoverMe">
											<Link
												href="#"
												className="btn-navy"
												id="btn-maps">
												View in Google Maps
											</Link>
										</div>
									</div>
								</div>
							</div>
						</div>

						<div className="d-flex flex-column card-event">
							<h6>Your Speaker</h6>
							<div className="d-flex align-items-center gap-3 mt-3">
								<Image
									src={`${process.env.NEXT_PUBLIC_API_URL}/${detail?.talent?.image?.name}`}
									alt="semina"
									width={250}
									height={180}
									style={{
										borderRadius: "10px",
										objectFit: "cover",
										objectPosition: "top",
									}}
								/>

								<div className="">
									<div className="speaker-name">
										{detail?.talent?.name}
									</div>
									<span className="occupation">
										{detail?.talent?.role}
									</span>
								</div>
							</div>
							<hr />

							<h6>Get Ticket</h6>
							{detail?.tickets?.map((ticket, index) => (
								<>
									{index === 0 && ticket.statusTicketCategory ? (
										<>
											<div className="price my-3">
												{ticket.price === 0
													? "Free"
													: `${handlerFormatCurrency(
															ticket.price
													  )}`}
												<span>/person</span>
											</div>
											<div className="d-flex gap-3 align-items-center card-details">
												<Image
													src={"/images/Marker.svg"}
													alt="semina"
													width={25}
													height={25}
												/>{" "}
												{detail.venueName}
											</div>
											<div className="d-flex gap-3 align-items-center card-details">
												<Image
													src={"/images/Time.svg"}
													alt="semina"
													width={25}
													height={25}
												/>{" "}
												{moment(detail.date).format("HH.MM A")}
											</div>
											<div className="d-flex gap-3 align-items-center card-details">
												<Image
													src={"/images/Calendar.svg"}
													alt="semina"
													width={25}
													height={25}
												/>{" "}
												{handlerFormatDate(detail.date)}
											</div>

											{detail.stock !== 0 && (
												<Button
													variant={"btn-green"}
													action={() =>
														handleSubmit(
															ticket._id,
															detail.organizer
														)
													}>
													Join Now
												</Button>
											)}
										</>
									) : (
										""
									)}
								</>
							))}
						</div>
					</div>
				</div>

				<CardEvent
					data={data}
					title={"Similar Events"}
					subTitle={"Next One"}
				/>
				<Stories />
				<Statistics />
				<Footer />
			</>
		)
}

export async function getServerSideProps(context) {
    const response = await getData(`${process.env.NEXT_PUBLIC_API_URL}/participants/events/${context.params.id}`)
    return {
        props: {
            detail: response.data,
            id: context.params.id
        }
    }
}