import Head from "next/head";
import Image from "next/image";
import moment from "moment";
import { Footer } from "@/src/components/Footer";
import { getData } from "@/src/utils/fetch";
import { handlerFormatDate } from "@/src/utils/date format";
import { handlerFormatCurrency } from "@/src/utils/currency";
import { Navbar } from "@/src/components/Navbar";

export default function Dashboard({ data }) {
	return (
		<>
			<Head>
				<title>Semina | Dashboard</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" type="image/svg+xml" href="/images/Logo.svg" />
			</Head>

			<section className="bg-navy">
				<Navbar />
			</section>

			<section className="bg-navy">
				<div className="checkout container">
					<div className="text-center checkout-title">
						Invest In Yourself
					</div>

					{data.map((data) => (
						<div
							className="event-details container d-flex flex-wrap justify-content-lg-center align-items-center gap-5"
							key={data._id}>
							<div className="d-flex flex-column gap-3">
								<h5>{data.historyEvent.title}</h5>
								<div className="d-flex align-items-center gap-3">
									<Image
										src={"/images/Marker White.svg"}
										alt=""
										width={25}
										height={25}
									/>
									<span>{data.historyEvent.venueName}</span>
								</div>
								<div className="d-flex align-items-center gap-3">
									<Image
										src={"/images/Time White.svg"}
										alt=""
										width={25}
										height={25}
									/>
									<span>{moment(data.historyEvent.date).format("HH.MM A")}</span>
								</div>
								<div className="d-flex align-items-center gap-3">
									<Image
										src={"/images/Calendar White.svg"}
										alt=""
										width={25}
										height={25}
									/>
									<span>{handlerFormatDate(data.historyEvent.date)}</span>
								</div>
                            </div>
                            <div className="total-price">
                                {data.totalPay === 0 ? 'Free' : handlerFormatCurrency(data.totalPay)}
                            </div>
						</div>
					))}
				</div>
            </section>
            <Footer />
		</>
	)
}

export async function getServerSideProps(context) {
    const { token } = context.req.cookies;
	const response = await getData(
		`${process.env.NEXT_PUBLIC_API_URL}/participants/orders`,
		{},
		token
    )

	return {
		props: {
			data: response.data
		}
	}
}